version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENV=${ENV}
      - FIREBASE_CREDENTIALS_PATH=/app/serviceAccountKey.json
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres  # ‚Üê Changed from localhost to service name
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DATABASE_URL_SYNC=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - REDIS_URL=${REDIS_URL}
      - CACHE_EXPIRE_HOURS=${CACHE_EXPIRE_HOURS}
    volumes:
      - .:/app
      - ./serviceAccountKey.json:/app/serviceAccountKey.json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: